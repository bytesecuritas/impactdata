# Generated by Django 5.2.3 on 2025-07-06 11:13

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0004_interaction_auteur'),
    ]

    operations = [
        migrations.CreateModel(
            name='GeneralParameter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parameter_key', models.CharField(choices=[('organization_name', "Nom de l'organisation"), ('organization_address', "Adresse de l'organisation"), ('organization_phone', "Téléphone de l'organisation"), ('organization_email', "Email de l'organisation"), ('organization_website', "Site web de l'organisation"), ('organization_logo', "Logo de l'organisation"), ('timezone', 'Fuseau horaire'), ('date_format', 'Format de date'), ('time_format', "Format d'heure"), ('language', 'Langue par défaut'), ('currency', 'Devise'), ('currency_symbol', 'Symbole de devise'), ('email_host', 'Serveur SMTP'), ('email_port', 'Port SMTP'), ('email_username', "Nom d'utilisateur email"), ('email_password', 'Mot de passe email'), ('email_use_tls', 'Utiliser TLS'), ('email_from_address', "Adresse email d'expédition"), ('email_from_name', "Nom d'expédition email"), ('password_min_length', 'Longueur minimale des mots de passe'), ('password_require_special', 'Mots de passe avec caractères spéciaux'), ('session_timeout', "Délai d'expiration de session (minutes)"), ('max_login_attempts', 'Nombre maximum de tentatives de connexion'), ('account_lockout_duration', 'Durée de verrouillage de compte (heures)'), ('items_per_page', "Nombre d'éléments par page"), ('enable_notifications', 'Activer les notifications'), ('enable_audit_log', "Activer le journal d'audit"), ('enable_backup', 'Activer la sauvegarde automatique'), ('backup_frequency', 'Fréquence de sauvegarde (jours)'), ('default_interaction_duration', 'Durée par défaut des interactions (heures)'), ('interaction_reminder_days', "Rappel d'interaction (jours avant échéance)"), ('badge_validity_days', 'Validité par défaut des badges (jours)'), ('max_organizations_per_agent', "Nombre maximum d'organisations par agent"), ('max_adherents_per_organization', "Nombre maximum d'adhérents par organisation")], max_length=50, unique=True, verbose_name='Clé du paramètre')),
                ('parameter_type', models.CharField(choices=[('text', 'Texte'), ('number', 'Nombre'), ('boolean', 'Booléen'), ('email', 'Email'), ('url', 'URL'), ('file', 'Fichier'), ('select', 'Liste déroulante'), ('textarea', 'Zone de texte'), ('date', 'Date'), ('time', 'Heure'), ('datetime', 'Date et heure')], max_length=20, verbose_name='Type de paramètre')),
                ('value', models.TextField(verbose_name='Valeur')),
                ('default_value', models.TextField(blank=True, verbose_name='Valeur par défaut')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('is_required', models.BooleanField(default=False, verbose_name='Obligatoire')),
                ('is_system', models.BooleanField(default=False, verbose_name='Paramètre système')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_parameters', to=settings.AUTH_USER_MODEL, verbose_name='Créé par')),
            ],
            options={
                'verbose_name': 'Paramètre Général',
                'verbose_name_plural': 'Paramètres Généraux',
                'ordering': ['parameter_key'],
            },
        ),
        migrations.CreateModel(
            name='RolePermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('admin', 'Administrateur'), ('superviseur', 'Superviseur'), ('agent', 'Agent')], max_length=20, verbose_name='Rôle')),
                ('permission', models.CharField(choices=[('user_create', 'Créer des utilisateurs'), ('user_edit', 'Modifier des utilisateurs'), ('user_delete', 'Supprimer des utilisateurs'), ('user_view', 'Voir les utilisateurs'), ('user_activate', 'Activer/Désactiver des utilisateurs'), ('adherent_create', 'Créer des adhérents'), ('adherent_edit', 'Modifier des adhérents'), ('adherent_delete', 'Supprimer des adhérents'), ('adherent_view', 'Voir les adhérents'), ('organization_create', 'Créer des organisations'), ('organization_edit', 'Modifier des organisations'), ('organization_delete', 'Supprimer des organisations'), ('organization_view', 'Voir les organisations'), ('interaction_create', 'Créer des interactions'), ('interaction_edit', 'Modifier des interactions'), ('interaction_delete', 'Supprimer des interactions'), ('interaction_view', 'Voir les interactions'), ('badge_create', 'Créer des badges'), ('badge_edit', 'Modifier des badges'), ('badge_delete', 'Supprimer des badges'), ('badge_view', 'Voir les badges'), ('badge_revoke', 'Révoquer des badges'), ('objective_create', 'Créer des objectifs'), ('objective_edit', 'Modifier des objectifs'), ('objective_delete', 'Supprimer des objectifs'), ('objective_view', 'Voir les objectifs'), ('settings_view', 'Voir les paramètres'), ('settings_edit', 'Modifier les paramètres'), ('settings_roles', 'Gérer les rôles'), ('settings_references', 'Gérer les valeurs de référence'), ('reports_view', 'Voir les rapports'), ('reports_export', 'Exporter les rapports'), ('stats_view', 'Voir les statistiques'), ('system_admin', 'Administration système'), ('data_backup', 'Sauvegarde des données'), ('data_restore', 'Restauration des données')], max_length=50, verbose_name='Permission')),
                ('is_active', models.BooleanField(default=True, verbose_name='Actif')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Permission de Rôle',
                'verbose_name_plural': 'Permissions de Rôles',
                'ordering': ['role', 'permission'],
                'unique_together': {('role', 'permission')},
            },
        ),
        migrations.CreateModel(
            name='ReferenceValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[('interaction_status', "Statuts d'interaction"), ('profession_types', 'Types de profession'), ('adherent_types', "Types d'adhérent"), ('organization_categories', "Catégories d'organisation"), ('badge_status', 'Statuts de badge'), ('objective_status', "Statuts d'objectif"), ('user_roles', 'Rôles utilisateur'), ('phone_types', 'Types de téléphone'), ('emergency_types', "Types d'urgence"), ('medical_info_types', "Types d'informations médicales"), ('formation_types', 'Types de formation'), ('distinction_types', 'Types de distinction'), ('language_types', 'Types de langue'), ('activity_types', "Types d'activité")], max_length=50, verbose_name='Catégorie')),
                ('code', models.CharField(max_length=20, verbose_name='Code')),
                ('label', models.CharField(max_length=100, verbose_name='Libellé')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('sort_order', models.PositiveIntegerField(default=0, verbose_name='Ordre de tri')),
                ('is_active', models.BooleanField(default=True, verbose_name='Actif')),
                ('is_default', models.BooleanField(default=False, verbose_name='Valeur par défaut')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_references', to=settings.AUTH_USER_MODEL, verbose_name='Créé par')),
            ],
            options={
                'verbose_name': 'Valeur de Référence',
                'verbose_name_plural': 'Valeurs de Référence',
                'ordering': ['category', 'sort_order', 'label'],
                'unique_together': {('category', 'code')},
            },
        ),
        migrations.CreateModel(
            name='SystemLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Horodatage')),
                ('level', models.CharField(choices=[('DEBUG', 'Debug'), ('INFO', 'Information'), ('WARNING', 'Avertissement'), ('ERROR', 'Erreur'), ('CRITICAL', 'Critique')], max_length=10, verbose_name='Niveau')),
                ('category', models.CharField(choices=[('user_management', 'Gestion des utilisateurs'), ('data_management', 'Gestion des données'), ('system_config', 'Configuration système'), ('security', 'Sécurité'), ('backup', 'Sauvegarde'), ('email', 'Email'), ('api', 'API'), ('general', 'Général')], max_length=20, verbose_name='Catégorie')),
                ('message', models.TextField(verbose_name='Message')),
                ('details', models.JSONField(blank=True, null=True, verbose_name='Détails')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='Adresse IP')),
                ('user_agent', models.TextField(blank=True, verbose_name='User Agent')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Utilisateur')),
            ],
            options={
                'verbose_name': 'Journal Système',
                'verbose_name_plural': 'Journaux Système',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['timestamp'], name='core_system_timesta_7e67e4_idx'), models.Index(fields=['level'], name='core_system_level_bf5286_idx'), models.Index(fields=['category'], name='core_system_categor_1fe2d6_idx'), models.Index(fields=['user'], name='core_system_user_id_6f81b7_idx')],
            },
        ),
    ]
